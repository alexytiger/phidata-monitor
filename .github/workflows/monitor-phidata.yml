name: Monitor Phidata Repository

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Get latest commit
        id: latest
        uses: actions/github-script@v6
        with:
          script: |
            const { data: commits } = await github.rest.repos.listCommits({
              owner: 'phidatahq',
              repo: 'phidata',
              per_page: 1
            });
            
            // Get last commit details
            const latestCommit = commits[0];
            const sha = latestCommit.sha;
            const message = latestCommit.commit.message;
            const author = latestCommit.commit.author.name;
            const date = latestCommit.commit.author.date;
            
            // Get changed files
            const { data: commit } = await github.rest.repos.getCommit({
              owner: 'phidatahq',
              repo: 'phidata',
              ref: sha
            });
            
            const files = commit.files.map(file => ({
              name: file.filename,
              status: file.status,
              additions: file.additions,
              deletions: file.deletions
            }));
            
            // Store outputs
            core.setOutput('sha', sha);
            core.setOutput('message', message);
            core.setOutput('author', author);
            core.setOutput('date', date);
            core.setOutput('files', JSON.stringify(files));
            
            try {
              const { readFile, writeFile } = require('fs/promises');
              let changed = true;
              
              try {
                const data = await readFile('last_commit.json', 'utf8');
                const previousData = JSON.parse(data);
                if (previousData.sha === sha) {
                  changed = false;
                }
              } catch (error) {
                // File doesn't exist yet, that's ok
              }
              
              if (changed) {
                await writeFile('last_commit.json', JSON.stringify({ sha, date }));
              }
              
              core.setOutput('changed', changed.toString());
            } catch (error) {
              core.setOutput('changed', 'true'); // Default to true on error
              core.warning('Error handling commit state: ' + error.message);
            }

      - name: Send email notification
        if: steps.latest.outputs.changed == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "ðŸ”„ Phidata Repository Update Detected"
          to: alexanddanik@gmail.com
          from: GitHub Actions
          body: |
            New changes detected in phidata repository

            Commit Details:
            - Author: ${{ steps.latest.outputs.author }}
            - Date: ${{ steps.latest.outputs.date }}
            - Message: ${{ steps.latest.outputs.message }}
            - SHA: ${{ steps.latest.outputs.sha }}

            View commit: https://github.com/phidatahq/phidata/commit/${{ steps.latest.outputs.sha }}

      - name: Create issue for changes
        if: steps.latest.outputs.changed == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const files = JSON.parse(steps.latest.outputs.files);
            
            let fileChanges = files.map(file => 
              `- ${file.name} (${file.status}): +${file.additions} -${file.deletions}`
            ).join('\n');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ“¦ Phidata Repository Update Detected - ${new Date().toISOString().split('T')[0]}`,
              body: `# New changes detected in phidata repository

              ## Commit Details
              - **Author:** ${steps.latest.outputs.author}
              - **Date:** ${steps.latest.outputs.date}
              - **Message:** ${steps.latest.outputs.message}
              - **SHA:** ${steps.latest.outputs.sha}
              
              ## Changed Files
              ${fileChanges}
              
              [View commit on GitHub](https://github.com/phidatahq/phidata/commit/${steps.latest.outputs.sha})`
            });
