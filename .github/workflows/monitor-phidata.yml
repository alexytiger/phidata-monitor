name: Monitor Phidata Repository

on:
  schedule:
    - cron: '0 */4 * * *'  # Changed to every 4 hours
  workflow_dispatch:  # Allow manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Get latest commit
        id: latest
        uses: actions/github-script@v6
        with:
          script: |
            const { data: commits } = await github.rest.repos.listCommits({
              owner: 'phidatahq',
              repo: 'phidata',
              per_page: 1
            });
            
            // Get last commit details
            const latestCommit = commits[0];
            const sha = latestCommit.sha;
            const message = latestCommit.commit.message;
            const author = latestCommit.commit.author.name;
            const date = latestCommit.commit.author.date;
            
            // Get changed files with details
            const { data: commit } = await github.rest.repos.getCommit({
              owner: 'phidatahq',
              repo: 'phidata',
              ref: sha
            });
            
            const files = commit.files.map(file => ({
              name: file.filename,
              status: file.status,
              additions: file.additions,
              deletions: file.deletions
            }));
            
            // Create formatted file changes string
            const fileChanges = files.map(file => 
              `- ${file.name}\n  Status: ${file.status}, +${file.additions} lines, -${file.deletions} lines`
            ).join('\n');
            
            core.setOutput('sha', sha);
            core.setOutput('message', message);
            core.setOutput('author', author);
            core.setOutput('date', date);
            core.setOutput('files', JSON.stringify(files));
            core.setOutput('fileChanges', fileChanges);

      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "ðŸ”„ Phidata Repository Update"
          to: alexanddanik@gmail.com
          from: GitHub Actions
          body: |
            Phidata Repository Update
            
            Commit Details:
            Author: ${{ steps.latest.outputs.author }}
            Date: ${{ steps.latest.outputs.date }}
            Message: ${{ steps.latest.outputs.message }}
            SHA: ${{ steps.latest.outputs.sha }}
            
            Changed Files:
            ${{ steps.latest.outputs.fileChanges }}
            
            View commit: https://github.com/phidatahq/phidata/commit/${{ steps.latest.outputs.sha }}

      - name: Create issue
        uses: actions/github-script@v6
        env:
          COMMIT_SHA: ${{ steps.latest.outputs.sha }}
          COMMIT_AUTHOR: ${{ steps.latest.outputs.author }}
          COMMIT_DATE: ${{ steps.latest.outputs.date }}
          COMMIT_MESSAGE: ${{ steps.latest.outputs.message }}
          COMMIT_FILES: ${{ steps.latest.outputs.files }}
          FILE_CHANGES: ${{ steps.latest.outputs.fileChanges }}
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ“¦ Phidata Repository Update - ${new Date().toISOString().split('T')[0]}`,
              body: `# Phidata Repository Update

              ## Commit Details
              - **Author:** ${process.env.COMMIT_AUTHOR}
              - **Date:** ${process.env.COMMIT_DATE}
              - **Message:** ${process.env.COMMIT_MESSAGE}
              - **SHA:** ${process.env.COMMIT_SHA}
              
              ## Changed Files
              ${process.env.FILE_CHANGES}
              
              [View commit on GitHub](https://github.com/phidatahq/phidata/commit/${process.env.COMMIT_SHA})`
            });
