name: Monitor Phidata Repository

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Allow manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository updates
        id: updates
        uses: actions/github-script@v6
        with:
          script: |
            const { data: commits } = await github.rest.repos.listCommits({
              owner: 'phidatahq',
              repo: 'phidata',
              per_page: 1
            });
            
            const commit = commits[0];
            const { data: commitDetails } = await github.rest.repos.getCommit({
              owner: 'phidatahq',
              repo: 'phidata',
              ref: commit.sha
            });
            
            const fileChanges = commitDetails.files.map(file => 
              `${file.filename} (${file.status}): +${file.additions} -${file.deletions}`
            ).join('\n');
            
            core.setOutput('author', commit.commit.author.name);
            core.setOutput('date', commit.commit.author.date);
            core.setOutput('message', commit.commit.message);
            core.setOutput('sha', commit.sha);
            core.setOutput('changes', fileChanges);

      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "ðŸ”„ Phidata Repository Update Check"
          to: alexanddanik@gmail.com
          from: GitHub Actions
          body: |
            Phidata Repository Status Update

            Latest Commit Details:
            Author: ${{ steps.updates.outputs.author }}
            Date: ${{ steps.updates.outputs.date }}
            Message: ${{ steps.updates.outputs.message }}
            SHA: ${{ steps.updates.outputs.sha }}

            Changed Files:
            ${{ steps.updates.outputs.changes }}

            View commit: https://github.com/phidatahq/phidata/commit/${{ steps.updates.outputs.sha }}

      - name: Create issue
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ“¦ Phidata Update Check - ${new Date().toISOString().split('T')[0]}`,
              body: `# Phidata Repository Status

              ## Latest Commit Details
              - **Author:** ${process.env.AUTHOR}
              - **Date:** ${process.env.DATE}
              - **Message:** ${process.env.MESSAGE}
              - **SHA:** ${process.env.SHA}
              
              ## Changed Files
              ${process.env.CHANGES}
              
              [View commit on GitHub](https://github.com/phidatahq/phidata/commit/${process.env.SHA})`
            });
        env:
          AUTHOR: ${{ steps.updates.outputs.author }}
          DATE: ${{ steps.updates.outputs.date }}
          MESSAGE: ${{ steps.updates.outputs.message }}
          SHA: ${{ steps.updates.outputs.sha }}
          CHANGES: ${{ steps.updates.outputs.changes }}
